(function(root){function Grapnel(config){"use strict";var self=this;this.events={};this.params=[];this.state=null;this.version="0.4.3";this.anchor={defaultHash:config&&config.root.replace(/\/$/,"")+"/"||window.location.hash,get:function(){return(config.pushState?window.location.pathname:window.location.hash).replace("#","")},set:function(anchor){if(config.pushState){window.history.pushState({prev:window.location.pathname,title:document.title},document.title,this.defaultHash+(anchor||""));window.onpopstate(window.history.state)}else{window.location.hash=!anchor?"":anchor}return self},clear:function(){return this.set(false)},reset:function(){return this.set(this.defaultHash)}};this._forEach=function(a,callback){if(typeof Array.prototype.forEach==="function")return Array.prototype.forEach.call(a,callback);return function(c,next){for(var i=0,n=this.length;i<n;++i){c.call(next,this[i],i,this)}}.call(a,callback)};this.trigger=function(event){var params=Array.prototype.slice.call(arguments,1);if(this.events[event]){this._forEach(this.events[event],function(fn){fn.apply(self,params)})}return this};if(typeof window.onhashchange==="function")this.on("hashchange",window.onhashchange);if(typeof window.onpopstate==="function")this.on("hashchange",window.onpopstate);window.onhashchange=function(){self.trigger("hashchange")};window.onpopstate=function(){self.trigger("hashchange")};return this}Grapnel.regexRoute=function(path,keys,sensitive,strict){if(path instanceof RegExp)return path;if(path instanceof Array)path="("+path.join("|")+")";path=path.concat(strict?"":"/?").replace(/\/\(/g,"(?:/").replace(/\+/g,"__plus__").replace(/(\/)?(\.)?:(\w+)(?:(\(.*?\)))?(\?)?/g,function(_,slash,format,key,capture,optional){keys.push({name:key,optional:!!optional});slash=slash||"";return""+(optional?"":slash)+"(?:"+(optional?slash:"")+(format||"")+(capture||(format&&"([^/.]+?)"||"([^/]+?)"))+")"+(optional||"")}).replace(/([\/.])/g,"\\$1").replace(/__plus__/g,"(.+)").replace(/\*/g,"(.*)");return new RegExp("^"+path+"$",sensitive?"":"i")};Grapnel.prototype.get=Grapnel.prototype.add=function(route,handler){var self=this,keys=[],regex=Grapnel.regexRoute(route,keys);var invoke=function RouteHandler(){var match=self.anchor.get().match(regex);if(match){var req={params:{},keys:keys,matches:match.slice(1)};self._forEach(req.matches,function(value,i){var key=keys[i]&&keys[i].name?keys[i].name:i;req.params[key]=value?decodeURIComponent(value):undefined});var event={route:route,value:self.anchor.get(),params:req.params,regex:match,propagateEvent:true,previousState:self.state,preventDefault:function(){this.propagateEvent=false},callback:function(){handler.call(self,req,event)}};self.trigger("match",event);if(!event.propagateEvent)return self;self.state=event;event.callback()}return self};return invoke().on("hashchange",invoke)};Grapnel.prototype.on=Grapnel.prototype.bind=function(event,handler){var self=this,events=event.split(" ");this._forEach(events,function(event){if(self.events[event]){self.events[event].push(handler)}else{self.events[event]=[handler]}});return this};Grapnel.Router=Grapnel.prototype.router=Grapnel;Grapnel.prototype.context=function(context){var self=this;return function(value,callback){var prefix=context.slice(-1)!=="/"?context+"/":context,pattern=prefix+value;return self.get.call(self,pattern,callback)}};Grapnel.listen=function(routes){return function(){for(var key in routes){this.get.call(this,key,routes[key])}return this}.call(new Grapnel)};if("function"===typeof root.define){root.define(function(require){return Grapnel})}else if("object"===typeof exports){exports.Grapnel=Grapnel}else{root.Grapnel=Grapnel}}).call({},window);